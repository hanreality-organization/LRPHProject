apply plugin: 'com.android.application'
apply plugin: 'com.mob.sdk'

android {
    signingConfigs {
        PunuoClient {
            keyAlias 'hangzhoupunuokeystore'
            keyPassword '123456'
            storeFile file('../hangzhoupunuo.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion gradle.sdk.compileSdkVersion
    buildToolsVersion gradle.sdk.buildToolsVersion
    defaultConfig {
        multiDexEnabled true
        applicationId gradle.sdk.packageName
        minSdkVersion gradle.sdk.minSdkVersion
        targetSdkVersion gradle.sdk.targetSdkVersion
        versionCode gradle.sdk.versionCode
        versionName gradle.sdk.versionName
        ndk {
            moduleName "serial_port"
            ldLibs "log"
            abiFilters "armeabi","x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.PunuoClient
        }
        debug {
            signingConfig signingConfigs.PunuoClient
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {

    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile.name.contains("release")) {
                        def fileName = "rlph_app.apk"
                        outputFileName = new File("../release/", fileName)
                    } else if (outputFile.name.contains("debug")) {
                        def fileName = "rlph_app.apk"
                        outputFileName = new File("../debug/", fileName)
                    }
            }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':basesdk')
    implementation project(':module_compat')
    implementation project(':module_home')
}